function getConnector(e,n){Interface.ensureImplements(e,absConnector),this.myConnector=e}var interface=require("./interface.js"),baseConn=require("./baseConnector.js"),util=require("util"),abstractConnector=new interface.Interface("AbstractConnector",["connect","disconnect","create","update","delete","getNextSeq","find","loadAutoParams","saveAutoParams","loadAutoTable","getParameter","saveParameter","findAndUpdate"]);MongoConnector=function(e,n){var o,t,r,s,i;o=t=r=s=i={a:"A"},this.mongoose=n,this.server=e,o=this.mongoose.Schema,t=new o({_id:String,seq:Number}),r=new o({__SessionId:{type:Number,index:1,required:!0},key:{type:String,required:!0},subKey:{type:String},rowId:{type:Number},value:{type:String}}),s=this.mongoose.model("counters",t),i=this.mongoose.model("sessionparameters",r),this.connector=this,MongoConnector.superclass.connector=this,this.mongoose.connection.on("error",function(n){console.error("Failed to connect to DB "+e+" on startup ",n)}),this.mongoose.connection.on("disconnected",function(){console.log("Mongoose default connection to DB :"+e+" disconnected")});var a=function(){var n=require("mongoose");n.connection.close(function(){console.log("Mongoose default connection with DB :"+e+" is disconnected through app termination"),process.exit(0)})};process.on("SIGINT",a).on("SIGTERM",a),interface.Interface.ensureImplements(this,abstractConnector),this.getSessionParameterTable=function(){return i},this.getCounters=function(){return s}},interface.extend(MongoConnector,baseConn.BaseConnector),MongoConnector.prototype={connect:function(){console.log("Connecting to Server: "+this.server),this.mongoose.connect(this.server)},disconnect:function(){this.mongoose.disconnect()},create:function(e,n,o){var t=new e(n);t.save(o)},updateDefault:function(e,n,o,t){var r=e.getSessionParameterTable().update(n,o);r.setOptions({upsert:!0,multi:!0}),r.exec(t)},update:function(e,n,o,t,r){if(arguments.length<=3)MongoConnector.prototype.updateDefault(this,arguments[0],arguments[1],arguments[2]);else{var s=this.mongoose.model(e);if(console.log("connection:update:0:"+JSON.stringify(n)+"upd"+JSON.stringify(o)),t){var n=s.update(n,o);n.setOptions({upsert:!0,multi:!0}),n.exec(r)}else{var n=s.findOne(n);n.setOptions({upsert:!0}),n.exec(function(e,t){if(e)throw e;n=t.update(o),n.setOptions({upsert:!0}),n.exec(r)})}}},findAndUpdate:function(e,n,o,t,r){var s=this.mongoose.model(e);if(console.log("connection:update:0:"+JSON.stringify(n)+"upd"+JSON.stringify(o)),t){var n=s.findOneAndUpdate(n,o,{new:!0,upsert:!0,multi:!0});n.exec(r)}else{var n=s.findOneAndUpdate(n,o,{new:!0,upsert:!0});n.exec(r)}},delete:function(e,n,o,t){var r=this.mongoose.model(e);if(o){var n=r.remove(n);n.exec(t)}else{var n=r.findOne(n);n.exec(function(e,o){if(e)throw e;n=o.remove(t)})}},findSessionParam:function(e,n,o){console.log("findSessionparam: "+JSON.stringify(n)),e.getSessionParameterTable().find(n,o)},findDefault:function(e,n,o){e.getSessionParameterTable().find(n,o)},find:function(e,n,o,t,r){var s,i;r[e+"__pageLimit"]&&""!=r[e+"__pageLimit"]?s=r[e+"__pageLimit"]:r[e+"__pageLimit"]=s=1e3,r[e+"__currentPage"]&&""!=r[e+"__currentPage"]&&r[e+"__currentPage"]>=0?i=r[e+"__currentPage"]:r[e+"__currentPage"]=i=1;var a={};r[e+"__sort"]&&(a=JSON.parse(r[e+"__sort"]));var c;r[e+"__search"]&&(c=JSON.parse(r[e+"__search"]));var u;if(r[e+"__bi"]&&(u=JSON.parse(r[e+"__bi"])),console.log("\n\n Inside FIND::table:"+e+" str:"+JSON.stringify(e)+" query="+JSON.stringify(n)+" sort="+JSON.stringify(a)+" search="+JSON.stringify(c)+" BI="+JSON.stringify(u)+" page="+r[e+"__currentPage"]+" limit="+r[e+"__pageLimit"]),arguments.length<=3)return void MongoConnector.prototype.findDefault(arguments[0],arguments[1],arguments[2]);var l=this.mongoose.model(e);if(u){Array.isArray(r[e+"__bi_results"])||(r[e+"__bi_results"]=new Array(u.length));for(var g=0;g<u.length;g++)console.log("\n BI::"+g+":"+u[g]),function(n){l.aggregate(u[n]).allowDiskUse(!0).exec(function(o,t){r[e+"__bi_results"][n]=t})}(g)}if(o){var f={};n&&c?f={$and:[n,c]}:n?f=n:c&&(f=c),l.find(f).count(function(n,o){r[e+"__rows"]=o,console.log("\n\n TABLE ="+e+" COUNT=="+o+" Err=="+n+"\n\n")}),l.find(f,t).sort(a).skip((i-1)*s).limit(s)}else l.findOne(n,t)},getNextSeq:function(e,n){this.getCounters().findOneAndUpdate({_id:e},{$inc:{seq:1}},{upsert:!0,new:!0},n)},loadAutoParams:function(){MongoConnector.superclass.loadAutoParams.apply(this,arguments)},saveAutoParams:function(){MongoConnector.superclass.saveAutoParams.apply(this,arguments)},loadAutoTable:function(){MongoConnector.superclass.loadAutoTable.apply(this,arguments)},saveAutoTable:function(){MongoConnector.superclass.saveAutoTable.apply(this,arguments)},getParameter:function(){MongoConnector.superclass.getParameter.apply(this,arguments)},saveParameter:function(){MongoConnector.superclass.saveParameter.apply(this,arguments)}},exports.MongoDBConnector=MongoConnector;